clc - (похожа на clear)
a = 1 + i - (i будет восприниматься как комплексная -1 )
exist a - (проверяет если ли такая зарезервированная переменная)
exist pi - выдаст ans = 5 (выдает число Пи и оно есть внутри Octave)
аналогично например sin

нельзя менять встроенные функции
то есть:
sin = 1 - переобпределит sin(), как функции

можно убирать переменные: clear sin - sin тут выступает, как переменная
			можно делать clear all - удалит все переменные
вектор строки A = [1,2,3] или A = [1 2 3]

матрица A = [1; 2; 3]

Срезы: X = 1:0.7:10 - start:step:stop то есть от 1 до 10 с шагом 0.7 (пример: x = 10:-1:1)

y = linspace(1,10,12) - идет от 1 до 10 с каким-то шагом, и ставит 12 точек равномерно, Octave сам определит шаг

Индексация в Octave начинается с 1 !!!
x =

   10    9    8    7    6    5    4    3    2    1

x(2) = 9

x(end) = 1

x(4:end)
	ans = 7   6   5   4   3   2   1
x(1:0.3:5)

	warning: non-integer range used as index
	ans = 10   10    9    9    9    8    8    8    8    7    7    7    6    6 - потому что 10 - 0.3 = 9.7 всё еще 10 и так далее с учетом округления

A = rand(5) - создаст матрицу [5,5] 
Аналогично можно создавать прямоугольную матрицу
Можно к элемету обращаться линейно A(7) - 5 столбцов + 2 строки [2, 5]
Или классически A(2,2)
Также A(1:2:5, 2:4) - то есть пройдет по строкам от 1 до 5 с шагом 2, а по столбцам от 2 до 4

A(:, 1) = 2 - заменит все элементы 1 столбца на 2

A(: , 1) = [] - удаление столбца 1 (мы ее как бы заменили на пустой вектор)

Z = zeros(4, 5) - матрица из 0 размером [4 x 5]

O = ones(4, 5) - матрица из 1 размером [4 x 5]

E = eye(5) - единичная матрица [5 x 5]

Примеры:
x = [1, 2, 3, 4, 5]
D = diag(x)
D =

   1   0   0   0   0
   0   2   0   0   0
   0   0   3   0   0
   0   0   0   4   0
   0   0   0   0   5


D = diag(x, 2)
D =

   0   0   1   0   0   0   0
   0   0   0   2   0   0   0
   0   0   0   0   3   0   0
   0   0   0   0   0   4   0
   0   0   0   0   0   0   5
   0   0   0   0   0   0   0
   0   0   0   0   0   0   0

работает и в обратную сторону

A = rand(5)
y = diag(A)

A =

   0.232698   0.681230   0.910792   0.706350   0.954478
   0.082359   0.158938   0.519157   0.236626   0.793552
   0.397478   0.180460   0.700951   0.774664   0.944229
   0.255048   0.042866   0.121952   0.896006   0.154807
   0.626703   0.365082   0.516841   0.590873   0.359468

y =

   0.2327
   0.1589
   0.7010
   0.8960
   0.3595





